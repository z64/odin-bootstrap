---
name: LLVM

on:
  pull_request:
    paths: [.github/workflows/llvm.yml, bootstrap_llvm.sh]
  push:
    paths: [.github/workflows/llvm.yml, bootstrap_llvm.sh]
  workflow_dispatch:

jobs:
  linux:
    strategy: { fail-fast: false, matrix: { llvm: ["17.0.2"] } }
    name: linux-llvm-${{ matrix.llvm }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/cache@v3
        id: cache-llvm
        with:
          key: linux-llvm-${{ matrix.llvm }}
          path: |
            ~/.cache/ccache
            llvm-project/

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y --no-install-{recommends,suggests} \
            ccache clang cmake git lld ninja-build

      - name: Bootstrap LLVM + Odin
        env:
          CC: /usr/bin/clang
          CC_LD: /usr/bin/lld
          CXX: /usr/bin/clang++
          CXX_LD: /usr/bin/lld
          LD: /usr/bin/lld
          LLVM_BRANCH: llvmorg-${{ matrix.llvm }}
        run: ./bootstrap_llvm.sh

      - name: Create Linux LLVM-${{ matrix.llvm }} distributable
        run: |
          mkdir distrib/
          cp -r Odin/core/     distrib/
          cp -r Odin/examples/ distrib/
          cp -r Odin/vendor/   distrib/
          cp Odin/LICENSE      distrib/
          cp Odin/libLLVM-*.so distrib/
          cp Odin/odin         distrib/

      # TODO(jcmdln): actions/upload-artifact@2+ breaks file permissions
      - uses: actions/upload-artifact@v1
        if: github.repository == 'jcmdln/odin-bootstrap'
        with:
          name: odin-linux-llvm-${{ matrix.llvm }}
          path: distrib/
